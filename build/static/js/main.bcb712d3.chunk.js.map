{"version":3,"sources":["services/orders.js","components/OrderDetails.js","components/EditOrder.js","components/PlaceOrder.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","id","newObject","post","OrderDetails","viewOrder","className","name","date","substring","order","ready","pickedUp","EditOrder","getOrder","trackOrder","handleTrackOrderChange","class","onSubmit","value","onChange","type","PlaceOrder","addOrder","newName","handleNameChange","newEmail","handleEmailChange","newOrder","handleOrderChange","orderId","Header","Layout","Content","Footer","App","useState","setNewOrder","setNewName","setNewEmail","setNewTrackOrder","orders","setOrders","setViewOrder","showOrderDetails","setShowOrderDetails","setOrderId","useEffect","orderService","initialOrders","filter","email","style","color","fontWeight","fontSize","padding","gutter","span","event","preventDefault","orderObject","Date","toISOString","returnedOrder","target","console","log","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcb712d3.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/orders'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n\n  const create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n\n  const get = (id) => {\n    const request = axios.get(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n  }\n  \n  const update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const remove = (id) => {\n      const request = axios.delete(`${baseUrl}/${id}`)\n      return request.then(response => response.data)\n  }\n  \n  export default { getAll, get, create, update, remove }","import React from 'react'\n\nconst OrderDetails = ({ viewOrder }) => {\n    return (\n        <>\n            <div className=\"order-now\">Order Details</div>\n                <div>\n                    <div>\n                    <p>Name: {viewOrder.name}</p>\n                    <p>Date Placed: {viewOrder.date.substring(0,10)}</p>\n                    <p>Time Placed: {viewOrder.date.substring(11,16)}</p>\n                    <p>Order Items: {viewOrder.order}</p>\n                    <p>Ready for Pick Up? {viewOrder.ready ? 'Yes' : 'No'}</p>\n                    <p>Customer has Picked Up? {viewOrder.pickedUp ? 'Yes' : 'No'}</p>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default OrderDetails","import React from 'react'\n\nconst EditOrder = ({ getOrder, trackOrder, handleTrackOrderChange }) => {\n    return (\n        <>\n           <div className=\"order-now\">Edit Order</div>\n                <form class=\"order-form\" onSubmit={getOrder}>\n                  Order Id: <input className=\"input-small\"\n                      value={trackOrder}\n                      onChange={handleTrackOrderChange}    \n                  />\n                  <button className=\"submit-button\" type=\"submit\">Track Order</button>\n                </form>\n        </>\n    )\n}\n\nexport default EditOrder","import React from 'react'\n\nconst PlaceOrder = ({ addOrder, newName, handleNameChange, newEmail, handleEmailChange, newOrder, handleOrderChange, orderId }) => {\n    return (\n        <>\n            <div className=\"order-now\">Place Order</div>\n                <form class=\"order-form\" onSubmit={addOrder}>\n                  Name: <input className=\"input-small\"\n                      value={newName}\n                      onChange={handleNameChange}    \n                  />\n                  Email: <input className=\"input-small\"\n                      value={newEmail}\n                      onChange={handleEmailChange}    \n                  />\n                  Order Items: <input className=\"input-small\"\n                      value={newOrder}\n                      onChange={handleOrderChange}    \n                  />\n                  <button className=\"submit-button\" type=\"submit\">Place Order</button>\n                </form>\n                <p>Order Id of Order Placed: {orderId}</p>\n        </>\n    )\n}\n\nexport default PlaceOrder","import React, { useState, useEffect } from 'react';\nimport orderService from './services/orders'\nimport OrderDetails from './components/OrderDetails'\nimport EditOrder from './components/EditOrder'\nimport PlaceOrder from './components/PlaceOrder'\nimport 'antd/dist/antd.css';\nimport { Layout, Row, Col } from 'antd';\n\n\n\nconst { Header, Content, Footer } = Layout;\n\n\nconst App = () => {\n  const [ newOrder, setNewOrder ] = useState()\n  const [ newName, setNewName ] = useState()\n  const [ newEmail, setNewEmail ] = useState()\n  const [ trackOrder, setNewTrackOrder ] = useState()\n  const [ orders, setOrders ] = useState([])\n  const [ viewOrder, setViewOrder ] = useState([])\n  const [ showOrderDetails, setShowOrderDetails ] = useState(false)\n  const [ orderId, setOrderId ] = useState('')\n\n  const hook = () => {\n    orderService\n        .getAll()\n        .then(initialOrders => {\n            setOrders(initialOrders)\n        })\n}\n\n  useEffect(hook, [])\n\n  const handleOrderChange = (event) => {\n    setNewOrder(event.target.value)\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleEmailChange = (event) => {\n    setNewEmail(event.target.value)\n  }\n  const handleTrackOrderChange = (event) => {\n    setNewTrackOrder(event.target.value)\n  }\n\n\n  const addOrder = (event) => {\n    event.preventDefault()\n    const orderObject = {\n      name: newName,\n      email: newEmail,\n      order: newOrder,\n      ready: false,\n      pickedUp: false,\n      date: new Date().toISOString(),\n    }\n\n    orderService\n      .create(orderObject)\n      .then(returnedOrder => {\n        setOrderId(returnedOrder.id)\n        setNewName('')\n        setNewEmail('')\n        setNewOrder('')\n      })\n  }\n  \n  const getOrder = (event) => {\n    event.preventDefault()\n    orderService\n      .get(trackOrder)\n      .then(returnedOrder => {\n        setNewTrackOrder('')\n        setViewOrder(returnedOrder)\n        setShowOrderDetails(true)\n        console.log('got return')\n      })\n    console.log('through GetOrder')\n  }\n\n  const ordersToShow = orders.filter(order => trackOrder === order.email)\n\n  return (\n    <div className=\"App\">\n      <Layout className=\"layout\">\n        <Header>\n          <h1 style={{color: \"white\", fontWeight: \"bolder\", fontSize: \"40px\"}}>Rocky Market</h1>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          <div className=\"site-layout-content\">\n            \n            <Row gutter={24}>\n              <Col span={8}>\n                <PlaceOrder \n                  addOrder={addOrder} \n                  newName={newName}\n                  handleNameChange={handleNameChange}\n                  newEmail={newEmail}\n                  handleEmailChange={handleEmailChange}\n                  newOrder={newOrder}\n                  handleOrderChange={handleOrderChange}\n                  orderId={orderId}\n                />\n              </Col>\n              <Col span={8}>\n                <EditOrder \n                  getOrder={getOrder} \n                  trackOrder={trackOrder} \n                  handleTrackOrderChange={handleTrackOrderChange}/>\n              </Col>\n              {showOrderDetails ? \n                <Col span={8}>\n                  <OrderDetails viewOrder={viewOrder} />\n                </Col>\n                : \n                <Col span={8}>\n                  <div className=\"order-now\">Order Details</div>\n                </Col>\n              }\n            </Row>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Made in React</Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}